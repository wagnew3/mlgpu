//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	crossEntropyCost

.visible .entry crossEntropyCost(
	.param .u64 crossEntropyCost_param_0,
	.param .u32 crossEntropyCost_param_1,
	.param .u64 crossEntropyCost_param_2,
	.param .u64 crossEntropyCost_param_3
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<72>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd5, [crossEntropyCost_param_0];
	ld.param.u32 	%r6, [crossEntropyCost_param_1];
	ld.param.u64 	%rd6, [crossEntropyCost_param_2];
	ld.param.u64 	%rd7, [crossEntropyCost_param_3];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r18, %r1, %r7, %r8;
	setp.ge.u32	%p1, %r18, %r6;
	@%p1 bra 	BB0_9;

	cvta.to.global.u64 	%rd1, %rd7;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r3, %r9, %r1;

BB0_2:
	cvt.s64.s32	%rd4, %r18;
	mul.wide.s32 	%rd8, %r18, 4;
	add.s64 	%rd9, %rd3, %rd8;
	ld.global.f32 	%f1, [%rd9];
	add.s64 	%rd10, %rd2, %rd8;
	ld.global.f32 	%f2, [%rd10];
	add.f32 	%f3, %f2, 0f3727C5AC;
	setp.gt.f32	%p2, %f3, 0f00000000;
	setp.lt.f32	%p3, %f3, 0f7F800000;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB0_4;
	bra.uni 	BB0_3;

BB0_4:
	setp.lt.f32	%p5, %f3, 0f00800000;
	mul.f32 	%f13, %f3, 0f4B800000;
	selp.f32	%f14, %f13, %f3, %p5;
	selp.f32	%f15, 0fC3170000, 0fC2FE0000, %p5;
	mov.b32 	 %r10, %f14;
	and.b32  	%r11, %r10, 8388607;
	or.b32  	%r12, %r11, 1065353216;
	mov.b32 	 %f16, %r12;
	shr.u32 	%r13, %r10, 23;
	cvt.rn.f32.u32	%f17, %r13;
	add.f32 	%f18, %f15, %f17;
	setp.gt.f32	%p6, %f16, 0f3FAE147B;
	mul.f32 	%f19, %f16, 0f3F000000;
	add.f32 	%f20, %f18, 0f3F800000;
	selp.f32	%f21, %f19, %f16, %p6;
	selp.f32	%f22, %f20, %f18, %p6;
	add.f32 	%f12, %f21, 0f3F800000;
	add.f32 	%f23, %f21, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f11,%f12;
	// inline asm
	mul.f32 	%f24, %f23, %f23;
	neg.f32 	%f25, %f24;
	mul.rn.f32 	%f26, %f11, %f25;
	add.rn.f32 	%f27, %f23, %f26;
	mul.f32 	%f28, %f27, %f27;
	mov.f32 	%f29, 0f3C4C6A36;
	mov.f32 	%f30, 0f3B1E94E6;
	fma.rn.f32 	%f31, %f30, %f28, %f29;
	mov.f32 	%f32, 0f3DAAAB1A;
	fma.rn.f32 	%f33, %f31, %f28, %f32;
	mul.f32 	%f34, %f28, %f33;
	fma.rn.f32 	%f35, %f34, %f27, %f26;
	add.f32 	%f36, %f23, %f35;
	mov.f32 	%f37, 0f3F317218;
	fma.rn.f32 	%f70, %f22, %f37, %f36;
	bra.uni 	BB0_5;

BB0_3:
	lg2.approx.f32 	%f70, %f3;

BB0_5:
	mov.f32 	%f38, 0f3F800054;
	sub.f32 	%f7, %f38, %f2;
	setp.gt.f32	%p7, %f7, 0f00000000;
	setp.lt.f32	%p8, %f7, 0f7F800000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_7;
	bra.uni 	BB0_6;

BB0_7:
	setp.lt.f32	%p10, %f7, 0f00800000;
	mul.f32 	%f41, %f7, 0f4B800000;
	selp.f32	%f42, %f41, %f7, %p10;
	selp.f32	%f43, 0fC3170000, 0fC2FE0000, %p10;
	mov.b32 	 %r14, %f42;
	and.b32  	%r15, %r14, 8388607;
	or.b32  	%r16, %r15, 1065353216;
	mov.b32 	 %f44, %r16;
	shr.u32 	%r17, %r14, 23;
	cvt.rn.f32.u32	%f45, %r17;
	add.f32 	%f46, %f43, %f45;
	setp.gt.f32	%p11, %f44, 0f3FAE147B;
	mul.f32 	%f47, %f44, 0f3F000000;
	add.f32 	%f48, %f46, 0f3F800000;
	selp.f32	%f49, %f47, %f44, %p11;
	selp.f32	%f50, %f48, %f46, %p11;
	add.f32 	%f40, %f49, 0f3F800000;
	add.f32 	%f51, %f49, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f39,%f40;
	// inline asm
	mul.f32 	%f52, %f51, %f51;
	neg.f32 	%f53, %f52;
	mul.rn.f32 	%f54, %f39, %f53;
	add.rn.f32 	%f55, %f51, %f54;
	mul.f32 	%f56, %f55, %f55;
	mov.f32 	%f57, 0f3C4C6A36;
	mov.f32 	%f58, 0f3B1E94E6;
	fma.rn.f32 	%f59, %f58, %f56, %f57;
	mov.f32 	%f60, 0f3DAAAB1A;
	fma.rn.f32 	%f61, %f59, %f56, %f60;
	mul.f32 	%f62, %f56, %f61;
	fma.rn.f32 	%f63, %f62, %f55, %f54;
	add.f32 	%f64, %f51, %f63;
	mov.f32 	%f65, 0f3F317218;
	fma.rn.f32 	%f71, %f50, %f65, %f64;
	bra.uni 	BB0_8;

BB0_6:
	lg2.approx.f32 	%f71, %f7;

BB0_8:
	mov.f32 	%f66, 0f3F800000;
	sub.f32 	%f67, %f66, %f1;
	mul.f32 	%f68, %f67, %f71;
	fma.rn.f32 	%f69, %f1, %f70, %f68;
	shl.b64 	%rd11, %rd4, 2;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.f32 	[%rd12], %f69;
	add.s32 	%r18, %r3, %r18;
	setp.lt.u32	%p12, %r18, %r6;
	@%p12 bra 	BB0_2;

BB0_9:
	ret;
}


